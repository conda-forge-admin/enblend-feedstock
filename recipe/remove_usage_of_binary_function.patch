diff --git a/src/fillpolygon.hxx b/src/fillpolygon.hxx
index dda332a..1dab593 100644
--- a/src/fillpolygon.hxx
+++ b/src/fillpolygon.hxx
@@ -285,8 +285,7 @@ namespace vigra_ext
 
 
         template <class SegmentType>
-        struct LessThanSegment :
-            public std::binary_function<SegmentType, SegmentType, bool>
+        struct LessThanSegment
         {
             bool operator()(const SegmentType& s, const SegmentType& t) const
             {
diff --git a/src/path.h b/src/path.h
index f35947f..2980704 100644
--- a/src/path.h
+++ b/src/path.h
@@ -35,7 +35,7 @@
 namespace enblend
 {
     template <typename Point, typename Image>
-    class PathCompareFunctor : public std::binary_function<Point, Point, bool>
+    class PathCompareFunctor
     {
     public:
         explicit PathCompareFunctor(const Image* an_image) : image_(an_image) {}
diff --git a/src/pyramid.h b/src/pyramid.h
index 526dfd2..6d76a0b 100644
--- a/src/pyramid.h
+++ b/src/pyramid.h
@@ -1423,8 +1423,7 @@ expand(bool add, bool wraparound,
 // Used when collapsing a laplacian pyramid.
 // Explicit fromPromote necessary to avoid overflow/underflow problems.
 template<typename T1, typename T2, typename T3>
-struct FromPromotePlusFunctorWrapper :
-    public std::binary_function<T1, T2, T3>
+struct FromPromotePlusFunctorWrapper
 {
     inline T3 operator()(const T1& a, const T2& b) const {
         return vigra::NumericTraits<T3>::fromPromote(a + b);
